<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>New Grid</title>
<script type="text/javascript" src='../../../jslib/jquery.js'></script>
<script type="text/javascript" src="../jquery.dataGrid.js"></script>
<script type="text/javascript">
	//페이지의 log 기능 활성화
	DEBUG_LOG = true; 

	var grid;
	$(document).ready(function() {
		grid = $.dataGrid('#tbl', {
			width 	:  800,
			height 	:  150,
			editColumn	: {
				"id"		:{},
				"country"	:{},
				"language"	:{select:"1:Arabic,2:Bengali,3:Spanish,4:English,5:Dutch,6:Greek,7:Korean",events:"onchange='c(this)';"}
			},
			fixColumn:["id","name"],
			paging : {rows:20,type:2},
			sortColumn:{"id":"intType","name":"stringType","airport":"stringType"},
			gridInfo: true
		});
		send();
	});
	
	function send() {
		var f = $('#excform');
		grid.updateBody(f);
		return false;
	}
	
	function c(ele){
		alert("onchange : "+ele.value);
	}
	
	
	
	//Row 추가방식 1 이 방식을 사용하기 위해서는 아래와 같이 처음 테이블 생성시 <tbody></tbody>부분의 안에 
	//적어도 하나의 TR을 형식에 맞게 작성하여야 한다. 작성된 TR은 내부적으로 defaultRow로 사용된다.
	//defaultJson으로 처음 설정된 값을 바꾸어 줄수 있다. 3은 설정되지 않았으므로 defaultRow의 값이 사용된다.
	function appendRowType1(){
		var defaultJson = {
			0:100,
			1:"Seoul",
			2:"Korea",
			4:"Korean",
			5:"KR"
		}
		grid.appendDefaultRow(defaultJson);
	}
	
	//Row 추가방식 2 인자로 string의 html을 주거나 row객체를 전달한다.
	function appendRowType2(){
		var htmlTR = "<tr><td>월</td><td>화</td><td>수</td><td>목</td><td>금</td><td>토</td></tr>";
		grid.appendRow(htmlTR);
	}
	
	function getAppendedRow(){
		//tr에 속성이 data-execute="append" 인 모든 로우를 가져 온다.
		var rows = grid.getRowsByCmd("append");
		if(rows.size()==0){
			alert("추가된 ROW가 없음");
			return;
		}
		rows.each(function(){
			//dataArray를 통해 값을 뽑아온후 실제 디비에 저장을 하면 된다.
			var dataArray = grid.getRowDataArray($(this));
			var data = "[id="+dataArray["id"]+"] " + "[name="+dataArray["name"]+"] " + "[language="+dataArray["language"]+"] " + "[airport="+dataArray["airport"]+"] "
			log(data,"append");		
		});
	}
	
	function getUpdatedRow(){
		//tr에 속성이 data-execute="update" 인 모든 로우를 가져 온다.
		var rows = grid.getRowsByCmd("update");
		if(rows.size()==0){
			alert("수정된 ROW가 없음");
			return;
		}
		rows.each(function(){
			//dataArray를 통해 값을 뽑아온후 실제 디비에 저장을 하면 된다.
			var dataArray = grid.getRowDataArray($(this));
			var data = "[id="+dataArray["id"]+"] " + "[name="+dataArray["name"]+"] " + "[language="+dataArray["language"]+"] " + "[airport="+dataArray["airport"]+"] "
			
			//변경되기 전의 값을 알고 싶다면 prefix로 pre_를 붙여 주면 된다. (ex : id => pre_id)
			log(dataArray["pre_id"]+" : "+data,"update");
		});
	}
	
	
	
	
	function getRemovedRow(){
		//tr에 속성이 data-execute="remove" 인 모든 로우를 가져 온다.
		var rows = grid.getRowsByCmd("remove");
		if(rows.size()==0){
			alert("삭제된 ROW가 없음");
			return;
		}
		rows.each(function(){
			//dataArray를 통해 값을 뽑아온후 실제 디비에 저장을 하면 된다.
			var dataArray = grid.getRowDataArray($(this));
			var data = "[id="+dataArray["id"]+"] " + "[name="+dataArray["name"]+"] " + "[language="+dataArray["language"]+"] " + "[airport="+dataArray["airport"]+"] "
			log(data,"remove");
		});
	}
	
	function removeRow(){
		var rows = grid.getSelectedRow();
		grid.removeRow(rows);
	}
	
</script>

</head>
<body>
	<form id="excform" action="../../../../../corelogic/process/samples/database/listCities.xhtml?data-only=true" method="post" onSubmit="return send()">
		<table border="1">
			<tr>
				<th>name : <input type="text" name="name" value=""  /></th>
				<td><input type="submit" value="execute" /></td>
			</tr>
		</table>
	</form>
	
	<h1>특정 컬럼 열을 수정하기</h1>
	<table id="tbl" >
		<colgroup>
			<col id="col_id"             width="50"  align="left"   />
			<col id="col_name"           width="100" align="center" />
			<col id="col_country"        width="120" align="center" />
			<col id="col_airport"        width="70"  align="left"   />
			<col id="col_language"       width="150" align="left"   />
			<col id="col_countryIsoCode" width="400" align="left"   />
		</colgroup>
		<thead>
			<tr>
				<th>id</th>
				<th>name</th>
				<th>country</th>
				<th>airport</th>
				<th>language</th>
				<th>countryIsoCode</th>
			</tr>
		</thead>
		<tbody>
			<tr>
				<td>1</td>
				<td>2</td>
				<td>3</td>
				<td>인천</td>
				<td>5</td>
				<td>6</td>
			</tr>
		</tbody>
	</table>
	<br /><br />
	<div>
		<input type="button" value="추가된 로우 가져오기 [getRowsByCmd('append')]" onclick="getAppendedRow();"/>
		<input type="button" value="로우추가[appendDefaultRow]" onclick="appendRowType1();"/>
		<input type="button" value="로우추가[appendRow]" onclick="appendRowType2();"/>
		<p>그리드에 새로운 로우가 추가 된경우 추가된 ROW는 data-execute="append" 라는 속성을 부여 받는다.</p>
	</div>
	<br />
	<div>
		<input type="button" value="수정된 로우 가져오기 [getRowsByCmd('update')]" onclick="getUpdatedRow();"/>
		<p>그리드에 기존에 존재하는 ROW가  수정된경우 data-execute="update" 라는 속성을 부여 받는다.</p>
	</div>
	<br />
	<div>
		<input type="button" value="삭제된 로우 가져오기 [getRowsByCmd('remove')]" onclick="getRemovedRow();"/>
		<input type="button" value="로우삭제 [removeRow]" onclick="removeRow();"/>
		
		<p>
			그리드에 기존에 존재하는 ROW가  수정된경우 data-execute="remove" 라는 속성을 부여 받는다.<br />
			만약 추가된ROW가 삭제된 경우는 원래 없던것이 삭제 되었기 때문에 메서드에 의해 반환되지 않는다.
		</p>
	</div>
</body>
</html>